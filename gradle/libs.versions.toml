[versions]
opentelemetry = "1.43.0"
opentelemetry-alpha = "1.43.0-alpha"
opentelemetry-instrumentation = "2.9.0"
opentelemetry-instrumentation-alpha = "2.9.0-alpha"
opentelemetry-semconv = "1.25.0-alpha"
opentelemetry-contrib = "1.40.0-alpha"
mockito = "5.14.2"
junit = "5.11.3"
byteBuddy = "1.15.7"
okhttp = "4.12.0"
spotless = "6.25.0"
kotlin = "2.0.21"
androidPlugin = "8.7.1"
junitKtx = "1.2.1"
autoService = "1.1.1"

[libraries]
opentelemetry-platform = { module = "io.opentelemetry.instrumentation:opentelemetry-instrumentation-bom", version.ref = "opentelemetry-instrumentation" }
androidx-navigation-fragment = "androidx.navigation:navigation-fragment:2.7.7"
androidx-core = "androidx.core:core:1.13.1"
androidx-lifecycle-process = "androidx.lifecycle:lifecycle-process:2.8.6"
findbugs-jsr305 = "com.google.code.findbugs:jsr305:3.0.2"
byteBuddy = { module = "net.bytebuddy:byte-buddy", version.ref = "byteBuddy" }
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
opentelemetry-instrumentation-api = { module = "io.opentelemetry.instrumentation:opentelemetry-instrumentation-api" }
opentelemetry-instrumentation-apiSemconv = { module = "io.opentelemetry.instrumentation:opentelemetry-instrumentation-api-incubator", version.ref = "opentelemetry-instrumentation-alpha" }
opentelemetry-instrumentation-okhttp = { module = "io.opentelemetry.instrumentation:opentelemetry-okhttp-3.0", version.ref = "opentelemetry-instrumentation-alpha" }
opentelemetry-semconv = { module = "io.opentelemetry.semconv:opentelemetry-semconv", version.ref = "opentelemetry-semconv" }
opentelemetry-semconv-incubating = { module = "io.opentelemetry.semconv:opentelemetry-semconv-incubating", version.ref = "opentelemetry-semconv" }
opentelemetry-api = { module = "io.opentelemetry:opentelemetry-api" }
opentelemetry-api-incubator = { module = "io.opentelemetry:opentelemetry-api-incubator" }
opentelemetry-sdk-extension-incubator = { module = "io.opentelemetry:opentelemetry-sdk-extension-incubator", version.ref = "opentelemetry-alpha" }
opentelemetry-sdk = { module = "io.opentelemetry:opentelemetry-sdk" }
opentelemetry-context = { module = "io.opentelemetry:opentelemetry-context", version.ref = "opentelemetry" }
opentelemetry-exporter-logging = { module = "io.opentelemetry:opentelemetry-exporter-logging" }
opentelemetry-diskBuffering = { module = "io.opentelemetry.contrib:opentelemetry-disk-buffering", version.ref = "opentelemetry-contrib" }
opentelemetry-exporter-otlp = { module = "io.opentelemetry:opentelemetry-exporter-otlp", version.ref = "opentelemetry" }
volley = "com.android.volley:volley:1.2.1"
auto-service-annotations = { module = "com.google.auto.service:auto-service-annotations", version.ref = "autoService" }
auto-service-processor = { module = "com.google.auto.service:auto-service", version.ref = "autoService" }

#Test tools
opentelemetry-sdk-testing = { module = "io.opentelemetry:opentelemetry-sdk-testing", version.ref = "opentelemetry" }
androidx-test-core = "androidx.test:core:1.6.1"
androidx-test-rules = "androidx.test:rules:1.6.1"
androidx-test-runner = "androidx.test:runner:1.6.2"
androidx-junit = "androidx.test.ext:junit:1.2.1"
mockito-core = { module = "org.mockito:mockito-core", version.ref = "mockito" }
mockito-junit-jupiter = { module = "org.mockito:mockito-junit-jupiter", version.ref = "mockito" }
mockk = "io.mockk:mockk:1.13.13"
junit-jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit" }
junit-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit" }
junit-vintage-engine = { module = "org.junit.vintage:junit-vintage-engine", version.ref = "junit" }
junit-platform-launcher = { module = "org.junit.platform:junit-platform-launcher", version = "1.11.3" }
robolectric = "org.robolectric:robolectric:4.13"
assertj-core = "org.assertj:assertj-core:3.26.3"
awaitility = "org.awaitility:awaitility:4.2.2"
mockwebserver = "com.google.mockwebserver:mockwebserver:20130706"
okhttp-mockwebserver = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "okhttp" }

#Compilation tools
desugarJdkLibs = "com.android.tools:desugar_jdk_libs:2.1.2"
nullaway = "com.uber.nullaway:nullaway:0.12.0"
errorprone-core = "com.google.errorprone:error_prone_core:2.35.1"
errorprone-javac = "com.google.errorprone:javac:9+181-r4173-1"
spotless-plugin = { module = "com.diffplug.spotless:spotless-plugin-gradle", version.ref = "spotless" }
errorprone-plugin = "net.ltgt.gradle:gradle-errorprone-plugin:4.1.0"
nullaway-plugin = "net.ltgt.gradle:gradle-nullaway-plugin:2.1.0"
animalsniffer-plugin = "ru.vyarus:gradle-animalsniffer-plugin:1.7.1"
android-plugin = { module = "com.android.tools.build:gradle", version.ref = "androidPlugin" }
byteBuddy-plugin = { module = "net.bytebuddy:byte-buddy-gradle-plugin", version.ref = "byteBuddy" }
kotlin-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
androidx-junit-ktx = { group = "androidx.test.ext", name = "junit-ktx", version.ref = "junitKtx" }

[bundles]
mocking = ["mockito-core", "mockito-junit-jupiter", "mockk"]
junit = ["junit-jupiter-api", "junit-jupiter-engine", "junit-vintage-engine"]

[plugins]
publishPlugin = { id = "io.github.gradle-nexus.publish-plugin", version = "2.0.0" }
spotless = { id = "com.diffplug.spotless", version.ref = "spotless" }
kotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
androidApp = { id = "com.android.application", version.ref = "androidPlugin" }
